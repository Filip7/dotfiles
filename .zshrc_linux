# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# function that changes directory to a project inside Workspace
# if -e is passed, it will instead open neovim inside that directory
function ws() {
    local base_dir="${HOME}/Workspace"
    local project_name=""
    local execute_flag=false

    # Parse command line arguments
    while getopts "e" opt; do
        case $opt in
            e)
                execute_flag=true
                ;;
            *)
                echo "Usage: ws [-e] [project_name]"
                return 1
                ;;
        esac
    done
    shift $((OPTIND -1))

    # Project name is now the first argument after options
    project_name="${1}"

    # If no project name is supplied, cd into the base directory if it exists
    if [[ -z "$project_name" ]]; then
        if [[ -d "$base_dir" ]]; then
            cd "$base_dir" || { echo "Failed to cd into $base_dir"; return 1 }
            echo "Changed directory to $base_dir"
            if [[ "$execute_flag" = true ]]; then
                v .
            fi
        else
            echo "Base directory $base_dir does not exist."
        fi
        return
    fi

    # Check if base directory exists
    if [[ ! -d "$base_dir" ]]; then
        echo "Base directory $base_dir does not exist."
        return 1
    fi

    # Search for closest match among directories
    local closest_match=""
    local match_score=0
    local current_score

    for dir in "$base_dir"/*(N); do
        dir_name="${dir:t}" # Extract directory name from path
        # Compute similarity score (simple version: ignore case and check if project_name is part of dir_name)
        if [[ "${dir_name:l}" == *"${project_name:l}"* ]]; then
            current_score=${#dir_name} # Length of the directory name as a basic score
            if [[ $current_score -gt $match_score ]]; then
                match_score=$current_score
                closest_match="$dir"
            fi
        fi
    done

    # If a match is found, cd into it; otherwise, echo no match found
    if [[ -n "$closest_match" ]]; then
        cd "$closest_match" || echo "Could not cd into $closest_match"
        echo "Changed directory to $closest_match"
        if [[ "$execute_flag" = true ]]; then
            nvim .
        fi
    else
        echo "No matching directory found for project: $project_name"
    fi
}

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
alias k="kubectl"
alias v="nvim"
alias vc="nvim --clean"
alias cm="chezmoi"
alias ls='ls --color=tty --group-directories-first'
export LC_ALL=C.UTF-8

source /usr/lib/spaceship-prompt/spaceship.zsh
[ -f /opt/miniconda3/etc/profile.d/conda.sh ] && source /opt/miniconda3/etc/profile.d/conda.sh
